package app.core.entity;

import app.core.component.Health;
import app.core.component.Hitbox;
import app.core.component.Transform;
import javafx.geometry.Point2D;
import javafx.scene.Node;

/**
 * An interface modelling the main concept of the game.
 */
public interface Entity {

    /**
     * Enumeration to manage the input of the entities.
     */
    enum Inputs {
        /**
         * Left input.
         */
        LEFT,
        /**
         * Right input.
         */
        RIGHT,
        /**
         * Space input.
         */
        SPACE,
        /**
         * Empty input.
         */
        EMPTY
    }

    /**
     * Returns a string with the runtime type of the current instance.
     *
     * @return the runtime type of the entity
     */
    String getType();

    /**
     * This method returns the width of the entity.
     *
     * @return the width of the entity
     */
    int getWidth();

    /**
     * This method returns the height of the entity.
     *
     * @return the height of the entity
     */
    int getHeight();

    /**
     * This method returns the position of the entity.
     *
     * @return the position of the entity
     */
    Point2D getPosition();

    /**
     * This method returns the Hitbox of the entity.
     *
     * @return the Hitbox of the entity
     */
    Hitbox getHitbox();

    /**
     * This method returns the Health of the entity.
     *
     * @return the Health of the entity
     */
    Health getHealth();

    /**
     * This method sets the Health of the entity.
     *
     * @param health the new Health value of the entity
     */
    void setHealth(Health health);

    /**
     * This method returns the Transform of the entity.
     *
     * @return the Transform of the entity
     */
    Transform getTransform();

    /**
     * This method returns the damage inflicted to the entity.
     *
     * @return the inflicted damage to the entity
     */
    int getDamage();

    /**
     * Assigns to the entity the damage that it inflicts.
     *
     * @param damage harm inflicted
     */
    void setDamage(int damage);

    /**
     * This method checks if the entity is displayed in the game window.
     *
     * @param position position of the player
     * @return true if the entity is close enough to the player in order
     * to be rendered inside the game window, false otherwise
     */
    boolean isDisplayed(Point2D position);

    /**
     * This method is used to render the entity.
     *
     * @param position of the entity
     * @return the Node generated by the renderer which will be given as input to the Scene
     */
    Node render(Point2D position);

    /**
     * Initialise the components of the entity.
     */
    void init();

}
